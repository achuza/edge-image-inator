# Set the default network queue discipline, ubuntu uses fq_codel
#
# We want to start with the following to tune the network slightly
# compared to defaults.
# Default pfifo_fast Default network queue discipline, we'll just use fq for now
# Options may include fq_codel (controlled delay) which prioritizes rtt delay when congested.
#
# We likely want to
sysctl -w net.core.default_qdisc=fq
sysctl -w net.core.netdev_max_backlog=5000
sysctl -w net.core.rmem_max=${ours}
sysctl -w net.core.somaxconn=1024
sysctl -w net.core.wmem_max=${ours}
sysctl -w net.ipv4.ip_local_port_range=10240 65535
sysctl -w net.ipv4.tcp_abort_on_overflow=1
sysctl -w net.ipv4.tcp_congestion_control=bbr
sysctl -w net.ipv4.tcp_max_syn_backlog=8192
sysctl -w net.ipv4.tcp_rmem="4096 12582912 ${ours}"
sysctl -w net.ipv4.tcp_slow_start_after_idle=0
sysctl -w net.ipv4.tcp_syn_retries=2
sysctl -w net.ipv4.tcp_tw_reuse=1
sysctl -w net.ipv4.tcp_wmem=4096 12582912 ${ours}"
# Adjust anonymous memory usage limit to prevent kswap/swapping from
# happening, default is 20% this should reduce jitter for processes
# slightly.
sysctl -w vm.dirty_ratio=10
# Start background writeback in a kthread at this % defaults is 10% so we just force work to occur earlier.
sysctl -w vm.dirty_background_ratio=3
# Set net.core to busy loop looking for new packets default is 0 (off) value is time in microseconds
#
# Note for both of these applications should likely use epoll or some
# other mechanism. Max this should ever get to is 100 after that
# applications need to be fixed.
sysctl -w net.core.busy_read=50
sysctl -w net.core.busy_poll=50
# Default is 1 (on) this enables clients to send data with a SYN
# packet vs connect()
#
# Setting to 3 enables this support on the server (0x2) and client (0x1)
sysctl -w net.ipv4.tcp_fastopen=3
# Default 120 seconds How long to declare a task hung when not
# scheduled for this amount of time.
sysctl -w kernel.hung_task_timeout_secs=600
# Disable the hardware non maskable interrupt watchdog
sysctl -w kernel.nmi_watchdog=0
# Default is 1 second, only update vm stats at a longer interval to
# save on locking of structures in the kernel.
sysctl -w vm.stat_interval = 10
# Disable timer migration between cpus, this can prevent a kernel
# timer from pre-empting user code for a few milliseconds when a cpu
# goes idle and those threads get rescheduled.
sysctl -w kernel.timer_migration = 0
# Reduce the kernels propensity to swap processes to disk
sysctl -w vm.swappiness=10